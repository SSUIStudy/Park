

///pop In
///@group special Fade In Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - popIn
///#pop1{
///    @include popIn(popLT,-100%,-100%,1s,forwards);
///}
@mixin popIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
      0% {
        -webkit-transform: translate3d($x_axis, $y_axis, 0) scale3d(0.1, 0.1, 0.1);
        transform: translate3d($x_axis, $y_axis, 0) scale3d(0.1, 0.1, 0.1);
        opacity: 0; }
      40% {
        opacity: 1;
        -webkit-animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
        animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1.08, 1.08, 1.08);
        transform: translate3d(0, 0, 0) scale3d(1.08, 1.08, 1.08); }
      60% {
        -webkit-animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
        transform: translate3d(0, 0, 0) scale3d(1, 1, 1); }
      80% {
        -webkit-animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1.03, 1.03, 1.03);
        transform: translate3d(0, 0, 0) scale3d(1.03, 1.03, 1.03); }
      100% {
        -webkit-animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
        animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
        transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
        opacity: 1; } }
        animation: $name $ani_time $ani_repetitions;
        animation-delay: $delay !important;
        opacity: 0;
}





///가로로 회전 하면서 fade in
///@group special Fade In Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInX
///   .flipInX{
///       @include flipInX(flipX, 1s, forwards, 1s(생략가능));
///   }
@mixin flipInX($name, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        from {
          opacity: 0;
          -webkit-transform: perspective(400px) rotateX(90deg) scale3d(1.2, 1.2, 1.2);
          transform: perspective(400px) rotateX(90deg) scale3d(1.2, 1.2, 1.2); }
        50% {
          opacity: 1;
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: perspective(400px) rotateX(-20deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateX(-20deg) scale3d(1, 1, 1); }
        to {
          -webkit-transform: perspective(400px) rotateX(0deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateX(0deg) scale3d(1, 1, 1);
          opacity: 1; } }
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}



///세로로 회전 하면서 fade in
///@group special Fade In Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInY
///   .flipInY{
///       @include flipInY(flipY, 1s, forwards, 1s(생략가능));
///   }
@mixin flipInY($name, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        from {
          opacity: 0;
          -webkit-transform: perspective(400px) rotateY(90deg) scale3d(1.2, 1.2, 1.2);
          transform: perspective(400px) rotateY(90deg) scale3d(1.2, 1.2, 1.2); }
        50% {
          opacity: 1;
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: perspective(400px) rotateY(-20deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateY(-20deg) scale3d(1, 1, 1); }
        to {
          -webkit-transform: perspective(400px) rotateY(0deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateY(0deg) scale3d(1, 1, 1);
          opacity: 1; } }
      
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///가로로 회전 하면서 fade in 2
///@group special Fade In Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInX2
///   .flipInX2{
///       @include flipInX2(flipX2, 1s, forwards, 1s(생략가능));
///   }
@mixin flipInX2($name, $ani_time, $ani_repetitions, $delay: null) {

  @keyframes #{$name} {
    from {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
      transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
      opacity: 0;
    }
  
    40% {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
      transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
  
    60% {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
      transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
      opacity: 1;
    }
  
    80% {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
      transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
    }
  
    to {
      -webkit-transform: perspective(400px);
      transform: perspective(400px);
      opacity: 1;
    }
  }
animation: $name $ani_time $ani_repetitions;
animation-delay: $delay !important;
opacity: 0;
}


///세로로 회전 하면서 fade in + 움직임 추가
///@group special Fade In Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInY2
///   .flipIn2Y{
///       @include flipInY2(flipY2, 1s, forwards, 1s(생략가능));
///   }
@mixin flipInY2($name, $ani_time, $ani_repetitions, $delay: null) {

  @keyframes #{$name} {
    from {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
      transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
      opacity: 0;
    }
  
    40% {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
      transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
  
    60% {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
      transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
      opacity: 1;
    }
  
    80% {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
      transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
    }
  
    to {
      -webkit-transform: perspective(400px);
      transform: perspective(400px);
      opacity: 1;
    }
  }
    
animation: $name $ani_time $ani_repetitions;
animation-delay: $delay !important;
opacity: 0;
}

///In
///@group basic Fade In Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - In
///   .In{
///       @include In(inR, 100px, 0, 1s, forwards, 1s(생략가능));
///   }
@mixin In($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

  @keyframes #{$name} {
      0% {
        -webkit-transform: translate3d($x_axis,$y_axis, 0);
        transform: translate3d($x_axis,$y_axis, 0);

       }
      100% {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);        
      } 
    }      
    
animation: $name $ani_time $ani_repetitions;
animation-delay: $delay !important;
transform: translate3d($x_axis,$y_axis, 0);
}


///fade in
///@group basic Fade In Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - fadeIn
///   .fadeIn{
///       @include fadeIn(fadeinR, 100px, 0, 1s, forwards, 1s(생략가능));
///   }
@mixin fadeIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        0% {
          -webkit-transform: translate3d($x_axis,$y_axis, 0);
          transform: translate3d($x_axis,$y_axis, 0);
          opacity: 0; }
        100% {
          -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
          opacity: 1; } }      
      
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}
///fade out
///@group basic Fade In Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - fadeOut
///   .fadeout{
///       @include fadeOut(fadeinR, 100px, 0, 1s, forwards, 1s(생략가능));
///   }

@mixin fadeOut($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {
  @keyframes #{$name} {
      0% {
          -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
      }
      100% {            
          -webkit-transform: translate3d($x_axis,$y_axis, 0);
          transform: translate3d($x_axis,$y_axis, 0);
      }   
  }
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;    
}


///spin
///@group Effect Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - spin
///   .spin{
///       @include spin(spin, 1s, forwards, 1s(생략가능));
///   }
@mixin spin($name, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        0% {
          -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          -webkit-transform: rotateZ(0deg);
          transform: rotateZ(0deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        20% {
          -webkit-animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
          animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
          -webkit-transform: rotateZ(-20deg);
          transform: rotateZ(-20deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        70% {
          -webkit-animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
          animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
          -webkit-transform: rotateZ(380deg);
          transform: rotateZ(380deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        100% {
          -webkit-animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
          animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
          -webkit-transform: rotateZ(360deg);
          transform: rotateZ(360deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; } }   
      
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
}


///spin + fade in
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - spinIn
///   .spinIn{
///       @include spinIn(spinin, 1s, forwards, 1s(생략가능));
///   }
@mixin spinIn($name, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        0% {
          opacity: 0;
          -webkit-animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
          animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
          -webkit-transform: rotateZ(0deg) scale3d(0, 0, 0);
          transform: rotateZ(0deg) scale3d(0, 0, 0);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        50% {
          opacity: 1; }
        70% {
          -webkit-transform: rotateZ(380deg) scale3d(1, 1, 1);
          transform: rotateZ(380deg) scale3d(1, 1, 1);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        100% {
          -webkit-transform: rotateZ(360deg) scale3d(1, 1, 1);
          transform: rotateZ(360deg) scale3d(1, 1, 1);
          -webkit-transform-origin: center center;
          transform-origin: center center;
          opacity: 1;  } }
      
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///pull up
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - pullUp
///   .pullUp{
///       @include pullUp(pull, 1s, forwards, 1s(생략가능));
///   }
@mixin pullUp($name, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        0% {
          -webkit-transform: scale3d(0, 0, 0);
          transform: scale3d(0, 0, 0); }
        30% {
          -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
          animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
          -webkit-transform: scale3d(1, 0, 1);
          transform: scale3d(1, 0, 1);
          -webkit-transform-origin: center bottom;
          transform-origin: center bottom; }
        100% {
          -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          -webkit-transform: scale3d(1, 1, 1);
          transform: scale3d(1, 1, 1);
          opacity: 1; } }
      
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}

///펼치면서 fade in
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - unfold
///   .unfold{
///       @include unfold(unfold, 1s, forwards, 1s(생략가능));
///   }
@mixin unfold($name, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        0% {
          opacity: 0;
          -webkit-animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
          animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
          -webkit-transform: scale3d(0, 0, 0);
          transform: scale3d(0, 0, 0); }
        30% {
          opacity: 1;
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: scale3d(0.4, 0.4, 1);
          transform: scale3d(0.4, 0.4, 1); }
        60% {
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: scale3d(0.4, 1, 1);
          transform: scale3d(0.4, 1, 1); }
        100% {
          -webkit-animation-timing-function: cubic-bezier(0.55, 0.085, 0.68, 0.53);
          animation-timing-function: cubic-bezier(0.55, 0.085, 0.68, 0.53);
          -webkit-transform: scale3d(1, 1, 1);
          transform: scale3d(1, 1, 1);
          opacity: 1; } }
      
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///bounce
///@group Effect Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {value} $value - 이동 거리
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - bounce
///   .bounce{ 
///      @include bounce(bounce, .5s, forwards, 50%, 1s(생략가능));
///   }
@mixin bounce($name, $ani_time, $ani_repetitions, $value, $delay: null) {

    @keyframes #{$name} {
      0% {
        -webkit-transform: translateY($value);
        transform: translateY($value);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
        opacity: 1;
      }
      24% {
          opacity: 1;
      }
      40% {
          -webkit-transform: translateY($value/2);
          transform: translateY($value/2);
          -webkit-animation-timing-function: ease-in;
          animation-timing-function: ease-in;
      }
      65% {
          -webkit-transform: translateY($value/4);
          transform: translateY($value/4);
          -webkit-animation-timing-function: ease-in;
          animation-timing-function: ease-in;
      }
      82% {
          -webkit-transform: translateY($value/8);
          transform: translateY($value/8);
          -webkit-animation-timing-function: ease-in;
          animation-timing-function: ease-in;
      }
      93% {
          -webkit-transform: translateY($value/16);
          transform: translateY($value/16);
          -webkit-animation-timing-function: ease-in;
          animation-timing-function: ease-in;
      }
      25%, 55%, 75%, 87% {
          -webkit-transform: translateY(0);
          transform: translateY(0);
          -webkit-animation-timing-function: ease-out;
          animation-timing-function: ease-out;
      }
      100% {
          -webkit-transform: translateY(0);
          transform: translateY(0);
          -webkit-animation-timing-function: ease-out;
          animation-timing-function: ease-out;
          opacity: 1;
      }
    }           
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
}


///반짝반짝(flash)
///@group effect Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flash
///   .flash{ 
///      @include flash(flash, 1s, forwards, 1s(생략가능));
///   }
@mixin flash($name, $ani_time, $ani_repetitions, $delay: null) {

  @keyframes #{$name} {
    from,
    50%,
    to {
      opacity: 1;
    }
  
    25%,
    75% {
      opacity: 0;
    }
  }
animation: $name $ani_time $ani_repetitions;
animation-delay: $delay !important;
}


///고무줄 같은 느낌(rubberBand)
///@group effect Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - rubberBand
///   .rubberBand{ 
///      @include rubberBand(band, 1s, forwards, 1s(생략가능));
///   }
@mixin rubberBand($name,$ani_time, $ani_repetitions, $delay: null) {

  @keyframes #{$name} {
    from {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  
    30% {
      -webkit-transform: scale3d(1.25, 0.75, 1);
      transform: scale3d(1.25, 0.75, 1);
    }
  
    40% {
      -webkit-transform: scale3d(0.75, 1.25, 1);
      transform: scale3d(0.75, 1.25, 1);
    }
  
    50% {
      -webkit-transform: scale3d(1.15, 0.85, 1);
      transform: scale3d(1.15, 0.85, 1);
    }
  
    65% {
      -webkit-transform: scale3d(0.95, 1.05, 1);
      transform: scale3d(0.95, 1.05, 1);
    }
  
    75% {
      -webkit-transform: scale3d(1.05, 0.95, 1);
      transform: scale3d(1.05, 0.95, 1);
    }
  
    to {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  }
animation: $name $ani_time $ani_repetitions;
animation-delay: $delay !important;
}


///bounce in
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - bounceIn
/// #bounce{
///   @include bounceIn(bouncebounceIn,0,-1000px,1s,forwards);
/// }
@mixin bounceIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

  @keyframes #{$name} {
    from,
    60%,
    75%,
    90%,
    to {
      -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
  
    0% {
      opacity: 0;
      -webkit-transform: translate3d($x_axis, $y_axis, 0);
      transform: translate3d($x_axis, $y_axis, 0);
    }
  
    60% {
      @if $x_axis == 0 {
        @if $y_axis < 0 {
          opacity: 1;
          -webkit-transform: translate3d(0, 25px, 0);
          transform: translate3d(0, 25px, 0);
        } @else if $y_axis > 0 {
          opacity: 1;
          -webkit-transform: translate3d(0, -25px, 0);
          transform: translate3d(0, -25px, 0);
        }
      }@else if $y_axis == 0 {
        @if $x_axis < 0 {
          opacity: 1;
          -webkit-transform: translate3d(25px, 0, 0);
          transform: translate3d(25px, 0, 0);
        } @else if $x_axis > 0 {
          opacity: 1;
          -webkit-transform: translate3d(-25px, 0, 0);
          transform: translate3d(-25px, 0, 0);
        }
      }
    }
  
    75% {
      @if $x_axis == 0 {
        @if $y_axis < 0 {
          -webkit-transform: translate3d(0, -10px, 0);
          transform: translate3d(0, -10px, 0);
        } @else if $y_axis > 0 {
          -webkit-transform: translate3d(0, 10px, 0);
          transform: translate3d(0, 10px, 0);
        }
      }
      @else if $y_axis == 0 {
        @if $x_axis < 0 {
          -webkit-transform: translate3d(-10px, 0, 0);
          transform: translate3d(-10px, 0, 0);
        } @else if $x_axis > 0 {
          -webkit-transform: translate3d(10px, 0, 0);
          transform: translate3d(10px, 0, 0);
        }
      }
    }
  
    90% {
      @if $x_axis == 0 {
        @if $y_axis < 0 {
          -webkit-transform: translate3d(0, 5px, 0);
          transform: translate3d(0, 5px, 0);
        } @else if $y_axis > 0 {
          -webkit-transform: translate3d(0, -5px, 0);
          transform: translate3d(0, -5px, 0);
        }
      }
      @else if $y_axis == 0 {
        @if $x_axis < 0 {
          -webkit-transform: translate3d(5px, 0, 0);
          transform: translate3d(5px, 0, 0);
        } @else if $x_axis > 0 {
          -webkit-transform: translate3d(-5px, 0, 0);
          transform: translate3d(-5px, 0, 0);
        }
      }
    }
  
    to {
      -webkit-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
  }
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}

///zoom In 
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - zoomIn
///   img{
///     @include zoomIn(zoom2,0,-1000px,1s,forwards,.5s);
///   }
@mixin zoomIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

  $zoomIn : $x_axis + $y_axis;
  @if $zoomIn == 0 {
    @keyframes #{$name} {
      from {
        opacity: 0;
        -webkit-transform: scale3d(0.3, 0.3, 0.3);
        transform: scale3d(0.3, 0.3, 0.3);
      }
    
      100% {
        opacity: 1;
      }
      
    }
  }@else{
    @keyframes #{$name} {
      from {
        opacity: 0;
        -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d($x_axis, $y_axis, 0);
        transform: scale3d(0.1, 0.1, 0.1) translate3d($x_axis, $y_axis, 0);
        -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
        animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
      }
    
      60% {
        opacity: 1;
        -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d($x_axis/16.66, $y_axis/16.66, 0);
        transform: scale3d(0.475, 0.475, 0.475) translate3d($x_axis/16.66, $y_axis/16.66, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
      }
      100%{
        opacity: 1;
      }
    }
  }
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///vanish In
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - vanishIn
/// #bounce{
///   @include vanishIn(vanishIn,1s,forwards);
/// }
@mixin vanishIn($name, $ani_time, $ani_repetitions, $delay: null) {
 
  @keyframes #{$name}{
    0%{
        opacity:0;
        transform-origin:50% 50%;
        transform:scale(1.2,1.2);
        filter:blur(30px);
    }
    100%{
        opacity:1;
        transform-origin:50% 50%;
        transform:scale(1,1);
        filter:blur(0);
    }
  }
    animation: $name $ani_time $ani_repetitions;
    animation-delay: $delay !important;
    opacity: 0;
}

///text + fade in
///@group text fade in Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {spacing} $spacing - 글자 간격
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - trackingIn
/// .banner01__tit{
///   @include trackingIn(trackingIn, 0, 0, 1s, forwards, -.5em);
/// }
@mixin trackingIn($name,$x_axis, $y_axis, $ani_time, $ani_repetitions, $spacing, $delay: null) {
 
  @keyframes #{$name}{
    0% {
      letter-spacing: $spacing;
      transform: translate($x_axis, $y_axis);
      opacity: 0;
    }
    
    100% {
      transform: translate(0, 0);
        opacity: 1;
    }
  }
    animation: $name $ani_time $ani_repetitions;
    animation-delay: $delay !important;
    opacity: 0;
}

///Background ken burns
///@group Background Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions [number or infinite] - 반복횟수
///@param {spacing} $way - 방향 
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - ken burns
/// .banner01{
///   @include ken_burns(Top, 15px, -15px, 10s, 1, right top);
/// }
@mixin ken_burns($name,$x_axis, $y_axis, $ani_time, $ani_repetitions, $way , $delay: null) {
 
  @keyframes #{$name}{
    0% {
      -webkit-transform: scale(1) translate(0,0);
      transform: scale(1) translate(0,0);
      -webkit-transform-origin: $way;
      transform-origin: $way;
    }
    @if $ani_repetitions == infinite{
      50% {
        -webkit-transform: scale(1.25) translate($x_axis,$y_axis);
        transform: scale(1.25) translate($x_axis,$y_axis);
        -webkit-transform-origin: $way;
        transform-origin: $way;
      }
      100% {
        -webkit-transform: scale(1) translate(0,0);
        transform: scale(1) translate(0,0);
        -webkit-transform-origin: $way;
        transform-origin: $way;
      }
    }@else{
      100% {
        -webkit-transform: scale(1.25) translate($x_axis,$y_axis);
        transform: scale(1.25) translate($x_axis,$y_axis);
        -webkit-transform-origin: $way;
        transform-origin: $way;
      }
    }
  }
    animation: $name $ani_time $ani_repetitions ease-out;
    animation-delay: $delay !important;
    
}

///Background img change 2x
///@group Background Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions [number or infinite] - 반복횟수
///@param {repeat} $bg_position - 배경위치
///@param {repeat} $bg_size - 배경사이즈
///@param {repeat} $bg_route1 - 배경 경로
///@param {repeat} $bg_route2 - 배경 경로
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - img change 2x
/// .banner01{
///   @include img_change_2x(img_change, 5s, infinite, 50% 100%,100% 100%, url(../images/bg.jpg),url(../images/bg2.jpg));
/// }
@mixin img_change_2x($name,$ani_time, $ani_repetitions ,$bg_position,$bg_size, $bg_route1,$bg_route2, $delay: null) {
  
  @keyframes #{$name}{
    0% {
      background-image:$bg_route1;   
      background-size: $bg_size;
    }
    100% {
      background-image:$bg_route2;   
      background-size: $bg_size;
    }       
  }
    background-repeat: no-repeat;
    background-position: $bg_position;
    animation: $name $ani_time $ani_repetitions linear alternate both running;
    animation-delay: $delay !important;    
}

///Background img change 3x
///@group Background Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions [number or infinite] - 반복횟수
///@param {repeat} $bg_position - 배경위치
///@param {repeat} $bg_size - 배경사이즈
///@param {repeat} $bg_route1 - 배경 경로
///@param {repeat} $bg_route2 - 배경 경로
///@param {repeat} $bg_route3 - 배경 경로
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - img change 2x
/// .banner01{
///   @include img_change_2x(img_change, 5s, infinite, 50% 100%,100% 100%, url(../images/bg.jpg),url(../images/bg2.jpg),url(../images/bg3.jpg));
/// }
@mixin img_change_3x($name,$ani_time, $ani_repetitions , $bg_position, $bg_size, $bg_route1, $bg_route2, $bg_route3, $delay: null) {
  
  @keyframes #{$name}{
    0% {
      background-image:$bg_route1;   
      background-size: $bg_size;
    }
    50% {
      background-image:$bg_route2;   
      background-size: $bg_size;
    }       
    100% {
      background-image:$bg_route3;   
      background-size: $bg_size;
    } 
  }
    background-repeat: no-repeat;
    background-position: $bg_position;
    animation: $name $ani_time $ani_repetitions linear alternate both running;
    animation-delay: $delay !important;    
}

///Background img change 4x
///@group Background Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions [number or infinite] - 반복횟수
///@param {repeat} $bg_position - 배경위치
///@param {repeat} $bg_size - 배경사이즈
///@param {repeat} $bg_route1 - 배경 경로
///@param {repeat} $bg_route2 - 배경 경로
///@param {repeat} $bg_route3 - 배경 경로
///@param {repeat} $bg_route4 - 배경 경로
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - img change 2x
/// .banner01{
///   @include img_change_2x(img_change, 5s, infinite, 50% 100%,100% 100%, url(../images/bg.jpg),url(../images/bg2.jpg),url(../images/bg3.jpg),url(../images/bg4.jpg));
/// }
@mixin img_change_4x($name,$ani_time, $ani_repetitions , $bg_position, $bg_size, $bg_route1, $bg_route2, $bg_route3,$bg_route4, $delay: null) {
  
  @keyframes #{$name}{
    0% {
      background-image:$bg_route1;   
      background-size: $bg_size;
    }
    33.333% {
      background-image:$bg_route2;   
      background-size: $bg_size;
    }       
    66.666% {
      background-image:$bg_route3;   
      background-size: $bg_size;
    } 
    100% {
      background-image:$bg_route4;   
      background-size: $bg_size;
    } 
  }
    background-repeat: no-repeat;
    background-position: $bg_position;
    animation: $name $ani_time $ani_repetitions linear alternate both running;
    animation-delay: $delay !important;    
}

///Background img change 5x
///@group Background Style
///@param {name} $name - keyframes 이름
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions [number or infinite] - 반복횟수
///@param {repeat} $bg_position - 배경위치
///@param {repeat} $bg_size - 배경사이즈
///@param {repeat} $bg_route1 - 배경 경로
///@param {repeat} $bg_route2 - 배경 경로
///@param {repeat} $bg_route3 - 배경 경로
///@param {repeat} $bg_route4 - 배경 경로
///@param {repeat} $bg_route5 - 배경 경로
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - img change 2x
/// .banner01{
///   @include img_change_2x(img_change, 5s, infinite, 50% 100%,100% 100%, url(../images/bg.jpg),url(../images/bg2.jpg),url(../images/bg3.jpg),url(../images/bg4.jpg),url(../images/bg5.jpg));
/// }
@mixin img_change_5x($name,$ani_time, $ani_repetitions , $bg_position, $bg_size, $bg_route1, $bg_route2, $bg_route3,$bg_route4,$bg_route5, $delay: null) {
  
  @keyframes #{$name}{
    0% {
      background-image:$bg_route1;   
      background-size: $bg_size;
    }
    25% {
      background-image:$bg_route2;   
      background-size: $bg_size;
    }       
    50% {
      background-image:$bg_route3;   
      background-size: $bg_size;
    } 
    75% {
      background-image:$bg_route4;   
      background-size: $bg_size;
    }       
    100% {
      background-image:$bg_route5;   
      background-size: $bg_size;
    } 
  }
    background-repeat: no-repeat;
    background-position: $bg_position;
    animation: $name $ani_time $ani_repetitions linear alternate both running;
    animation-delay: $delay !important;    
}