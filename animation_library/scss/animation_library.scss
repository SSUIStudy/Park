

///pop In
///@group special Fade In Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - popIn
///#pop1{
///    @include popIn(popLT,-100%,-100%,1s,forwards);
///}
@mixin popIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
      0% {
        -webkit-transform: translate3d($x_axis, $y_axis, 0) scale3d(0.1, 0.1, 0.1);
        transform: translate3d($x_axis, $y_axis, 0) scale3d(0.1, 0.1, 0.1);
        opacity: 0; }
      40% {
        opacity: 1;
        -webkit-animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
        animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1.08, 1.08, 1.08);
        transform: translate3d(0, 0, 0) scale3d(1.08, 1.08, 1.08); }
      60% {
        -webkit-animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
        transform: translate3d(0, 0, 0) scale3d(1, 1, 1); }
      80% {
        -webkit-animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1.03, 1.03, 1.03);
        transform: translate3d(0, 0, 0) scale3d(1.03, 1.03, 1.03); }
      100% {
        -webkit-animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
        animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
        -webkit-transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
        transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
        opacity: 1; } }
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}





///가로로 회전 하면서 fade in
///@group special Fade In Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInX
///   .flipInX{
///       @include flipInX(1s, forwards, 1s(생략가능));
///   }
@mixin flipInX($ani_time, $ani_repetitions, $delay: null) {

    @keyframes flipInX {
        from {
          opacity: 0;
          -webkit-transform: perspective(400px) rotateX(90deg) scale3d(1.2, 1.2, 1.2);
          transform: perspective(400px) rotateX(90deg) scale3d(1.2, 1.2, 1.2); }
        50% {
          opacity: 1;
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: perspective(400px) rotateX(-20deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateX(-20deg) scale3d(1, 1, 1); }
        to {
          -webkit-transform: perspective(400px) rotateX(0deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateX(0deg) scale3d(1, 1, 1);
          opacity: 1; } }
  animation: flipInX $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}



///세로로 회전 하면서 fade in
///@group special Fade In Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInY
///   .flipInY{
///       @include flipInY(1s, forwards, 1s(생략가능));
///   }
@mixin flipInY($ani_time, $ani_repetitions, $delay: null) {

    @keyframes flipInY {
        from {
          opacity: 0;
          -webkit-transform: perspective(400px) rotateY(90deg) scale3d(1.2, 1.2, 1.2);
          transform: perspective(400px) rotateY(90deg) scale3d(1.2, 1.2, 1.2); }
        50% {
          opacity: 1;
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: perspective(400px) rotateY(-20deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateY(-20deg) scale3d(1, 1, 1); }
        to {
          -webkit-transform: perspective(400px) rotateY(0deg) scale3d(1, 1, 1);
          transform: perspective(400px) rotateY(0deg) scale3d(1, 1, 1);
          opacity: 1; } }
      
  animation: flipInY $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///가로로 회전 하면서 fade in + 움직임 추가
///@group special Fade In Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInX2
///   .flipInX2{
///       @include flipInX2(1s, forwards, 1s(생략가능));
///   }
@mixin flipInX2($ani_time, $ani_repetitions, $delay: null) {

  @keyframes flipInX2 {
    from {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
      transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
      opacity: 0;
    }
  
    40% {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
      transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
  
    60% {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
      transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
      opacity: 1;
    }
  
    80% {
      -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
      transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
    }
  
    to {
      -webkit-transform: perspective(400px);
      transform: perspective(400px);
      opacity: 1;
    }
  }
animation: flipInX2 $ani_time $ani_repetitions;
animation-delay: $delay !important;
opacity: 0;
}


///세로로 회전 하면서 fade in + 움직임 추가
///@group special Fade In Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flipInY2
///   .flipIn2Y{
///       @include flipInY2(1s, forwards, 1s(생략가능));
///   }
@mixin flipInY2($ani_time, $ani_repetitions, $delay: null) {

  @keyframes flipInY2 {
    from {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
      transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
      opacity: 0;
    }
  
    40% {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
      transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
  
    60% {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
      transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
      opacity: 1;
    }
  
    80% {
      -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
      transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
    }
  
    to {
      -webkit-transform: perspective(400px);
      transform: perspective(400px);
      opacity: 1;
    }
  }
    
animation: flipInY2 $ani_time $ani_repetitions;
animation-delay: $delay !important;
opacity: 0;
}


///fade in
///@group basic Fade In Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - fadeIn
///   .fadeIn{
///       @include fadeIn(fadeinR, 100px, 0, 1s, forwards, 1s(생략가능));
///   }
@mixin fadeIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

    @keyframes #{$name} {
        0% {
          -webkit-transform: translate3d($x_axis,$y_axis, 0);
          transform: translate3d($x_axis,$y_axis, 0);
          opacity: 0; }
        100% {
          -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
          opacity: 1; } }      
      
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///spin
///@group impact Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - spin
///   .spin{
///       @include spin(1s, forwards, 1s(생략가능));
///   }
@mixin spin($ani_time, $ani_repetitions, $delay: null) {

    @keyframes spin {
        0% {
          -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          -webkit-transform: rotateZ(0deg);
          transform: rotateZ(0deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        20% {
          -webkit-animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
          animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
          -webkit-transform: rotateZ(-20deg);
          transform: rotateZ(-20deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        70% {
          -webkit-animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
          animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
          -webkit-transform: rotateZ(380deg);
          transform: rotateZ(380deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        100% {
          -webkit-animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
          animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
          -webkit-transform: rotateZ(360deg);
          transform: rotateZ(360deg);
          -webkit-transform-origin: center center;
          transform-origin: center center; } }   
      
  animation: spin $ani_time $ani_repetitions;
  animation-delay: $delay !important;
}


///spin + fade in
///@group special fade in Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - spinIn
///   .spinIn{
///       @include spinIn(1s, forwards, 1s(생략가능));
///   }
@mixin spinIn($ani_time, $ani_repetitions, $delay: null) {

    @keyframes spinIn {
        0% {
          opacity: 0;
          -webkit-animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
          animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
          -webkit-transform: rotateZ(0deg) scale3d(0, 0, 0);
          transform: rotateZ(0deg) scale3d(0, 0, 0);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        50% {
          opacity: 1; }
        70% {
          -webkit-transform: rotateZ(380deg) scale3d(1, 1, 1);
          transform: rotateZ(380deg) scale3d(1, 1, 1);
          -webkit-transform-origin: center center;
          transform-origin: center center; }
        100% {
          -webkit-transform: rotateZ(360deg) scale3d(1, 1, 1);
          transform: rotateZ(360deg) scale3d(1, 1, 1);
          -webkit-transform-origin: center center;
          transform-origin: center center;
          opacity: 1;  } }
      
  animation: spinIn $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///세우면서 fade in
///@group special fade in Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - pullUp
///   .pullUp{
///       @include pullUp(1s, forwards, 1s(생략가능));
///   }
@mixin pullUp($ani_time, $ani_repetitions, $delay: null) {

    @keyframes pullUp {
        0% {
          -webkit-transform: scale3d(0, 0, 0);
          transform: scale3d(0, 0, 0); }
        30% {
          -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
          animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
          -webkit-transform: scale3d(1, 0, 1);
          transform: scale3d(1, 0, 1);
          -webkit-transform-origin: center bottom;
          transform-origin: center bottom; }
        100% {
          -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          -webkit-transform: scale3d(1, 1, 1);
          transform: scale3d(1, 1, 1);
          opacity: 1; } }
      
  animation: pullUp $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}

///펼치면서 fade in
///@group special fade in Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - unfold
///   .unfold{
///       @include unfold(1s, forwards, 1s(생략가능));
///   }
@mixin unfold($ani_time, $ani_repetitions, $delay: null) {

    @keyframes unfold {
        0% {
          opacity: 0;
          -webkit-animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
          animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
          -webkit-transform: scale3d(0, 0, 0);
          transform: scale3d(0, 0, 0); }
        30% {
          opacity: 1;
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: scale3d(0.4, 0.4, 1);
          transform: scale3d(0.4, 0.4, 1); }
        60% {
          -webkit-animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          -webkit-transform: scale3d(0.4, 1, 1);
          transform: scale3d(0.4, 1, 1); }
        100% {
          -webkit-animation-timing-function: cubic-bezier(0.55, 0.085, 0.68, 0.53);
          animation-timing-function: cubic-bezier(0.55, 0.085, 0.68, 0.53);
          -webkit-transform: scale3d(1, 1, 1);
          transform: scale3d(1, 1, 1);
          opacity: 1; } }
      
  animation: unfold $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}


///bounce
///@group impact Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {value} $value - 이동 거리
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - bounce
///   .bounce{ 
///      @include bounce(.5s, forwards, 50%, 1s(생략가능));
///   }
@mixin bounce($ani_time, $ani_repetitions, $value, $delay: null) {

    @keyframes bounce {
        from,
        20%,
        53%,
        80%,
        to {
          -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
          animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
          -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
        }      
        40%,
        43% {
          -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          -webkit-transform: translate3d(0, -$value, 0);
          transform: translate3d(0, -$value, 0);
        }      
        70% {
          -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
          -webkit-transform: translate3d(0, -$value/2, 0);
          transform: translate3d(0, -$value/2, 0);
        }      
        90% {
          -webkit-transform: translate3d(0, -$value/7.5, 0);
          transform: translate3d(0,- $value/7.5, 0);
        }
      }           
  animation: bounce $ani_time $ani_repetitions;
  animation-delay: $delay !important;
}


///반짝반짝(flash)
///@group impact Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - flash
///   .flash{ 
///      @include flash(1s, forwards, 1s(생략가능));
///   }
@mixin flash($ani_time, $ani_repetitions, $delay: null) {

  @keyframes flash {
    from,
    50%,
    to {
      opacity: 1;
    }
  
    25%,
    75% {
      opacity: 0;
    }
  }
animation: flash $ani_time $ani_repetitions;
animation-delay: $delay !important;
}


///고무줄 같은 느낌(rubberBand)
///@group impact Style
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - rubberBand
///   .rubberBand{ 
///      @include rubberBand(1s, forwards, 1s(생략가능));
///   }
@mixin rubberBand($ani_time, $ani_repetitions, $delay: null) {

  @keyframes rubberBand {
    from {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  
    30% {
      -webkit-transform: scale3d(1.25, 0.75, 1);
      transform: scale3d(1.25, 0.75, 1);
    }
  
    40% {
      -webkit-transform: scale3d(0.75, 1.25, 1);
      transform: scale3d(0.75, 1.25, 1);
    }
  
    50% {
      -webkit-transform: scale3d(1.15, 0.85, 1);
      transform: scale3d(1.15, 0.85, 1);
    }
  
    65% {
      -webkit-transform: scale3d(0.95, 1.05, 1);
      transform: scale3d(0.95, 1.05, 1);
    }
  
    75% {
      -webkit-transform: scale3d(1.05, 0.95, 1);
      transform: scale3d(1.05, 0.95, 1);
    }
  
    to {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  }
animation: rubberBand $ani_time $ani_repetitions;
animation-delay: $delay !important;
}


///bounce in
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - bounceIn
/// #bounce{
///   @include bounceIn(bouncebounceIn,0,-1000px,1s,forwards);
/// }
@mixin bounceIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

  @keyframes #{$name} {
    from,
    60%,
    75%,
    90%,
    to {
      -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
  
    0% {
      opacity: 0;
      -webkit-transform: translate3d($x_axis, $y_axis, 0);
      transform: translate3d($x_axis, $y_axis, 0);
    }
  
    60% {
      @if $x_axis == 0 {
        @if $y_axis < 0 {
          opacity: 1;
          -webkit-transform: translate3d(0, 25px, 0);
          transform: translate3d(0, 25px, 0);
        } @else if $y_axis > 0 {
          opacity: 1;
          -webkit-transform: translate3d(0, -25px, 0);
          transform: translate3d(0, -25px, 0);
        }
      }@else if $y_axis == 0 {
        @if $x_axis < 0 {
          opacity: 1;
          -webkit-transform: translate3d(25px, 0, 0);
          transform: translate3d(25px, 0, 0);
        } @else if $x_axis > 0 {
          opacity: 1;
          -webkit-transform: translate3d(-25px, 0, 0);
          transform: translate3d(-25px, 0, 0);
        }
      }
    }
  
    75% {
      @if $x_axis == 0 {
        @if $y_axis < 0 {
          -webkit-transform: translate3d(0, -10px, 0);
          transform: translate3d(0, -10px, 0);
        } @else if $y_axis > 0 {
          -webkit-transform: translate3d(0, 10px, 0);
          transform: translate3d(0, 10px, 0);
        }
      }
      @else if $y_axis == 0 {
        @if $x_axis < 0 {
          -webkit-transform: translate3d(-10px, 0, 0);
          transform: translate3d(-10px, 0, 0);
        } @else if $x_axis > 0 {
          -webkit-transform: translate3d(10px, 0, 0);
          transform: translate3d(10px, 0, 0);
        }
      }
    }
  
    90% {
      @if $x_axis == 0 {
        @if $y_axis < 0 {
          -webkit-transform: translate3d(0, 5px, 0);
          transform: translate3d(0, 5px, 0);
        } @else if $y_axis > 0 {
          -webkit-transform: translate3d(0, -5px, 0);
          transform: translate3d(0, -5px, 0);
        }
      }
      @else if $y_axis == 0 {
        @if $x_axis < 0 {
          -webkit-transform: translate3d(5px, 0, 0);
          transform: translate3d(5px, 0, 0);
        } @else if $x_axis > 0 {
          -webkit-transform: translate3d(-5px, 0, 0);
          transform: translate3d(-5px, 0, 0);
        }
      }
    }
  
    to {
      -webkit-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
  }
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}

///zoom In 
///@group special fade in Style
///@param {name} $name - keyframes 이름
///@param {x_axis} $x_axis - x축
///@param {y_axis} $y_axis - y축
///@param {time} $ani_time - 플레이 시간
///@param {repeat} $ani_repetitions - 반복횟수
///@param {delay} $delay [null] - 딜레이 시간
///@example scss - zoomIn
///   img{
///     @include zoomIn(zoom2,0,-1000px,1s,forwards,.5s);
///   }
@mixin zoomIn($name, $x_axis, $y_axis, $ani_time, $ani_repetitions, $delay: null) {

  $zoomIn : $x_axis + $y_axis;
  @if $zoomIn == 0 {
    @keyframes #{$name} {
      from {
        opacity: 0;
        -webkit-transform: scale3d(0.3, 0.3, 0.3);
        transform: scale3d(0.3, 0.3, 0.3);
      }
    
      100% {
        opacity: 1;
      }
      
    }
  }@else{
    @keyframes #{$name} {
      from {
        opacity: 0;
        -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d($x_axis, $y_axis, 0);
        transform: scale3d(0.1, 0.1, 0.1) translate3d($x_axis, $y_axis, 0);
        -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
        animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
      }
    
      60% {
        opacity: 1;
        -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d($x_axis/16.66, $y_axis/16.66, 0);
        transform: scale3d(0.475, 0.475, 0.475) translate3d($x_axis/16.66, $y_axis/16.66, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
      }
      100%{
        opacity: 1;
      }
    }
  }
  animation: $name $ani_time $ani_repetitions;
  animation-delay: $delay !important;
  opacity: 0;
}
